name: Deploy to RemittEase Server

on:
  push:
    branches:
      - main  # your live branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, intl, pdo, mysql, zip
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=512M
          coverage: none

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Clean Node Modules
        run: |
          rm -rf node_modules
          rm -f yarn.lock

      - name: Install Node.js dependencies
        run: yarn install --legacy-peer-deps

      - name: Install Composer dependencies
        run: composer install --no-dev --prefer-dist --optimize-autoloader

      - name: Create .env file
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=pgsql"  >> .env
          echo "DB_HOST=127.0.0.1"    >> .env
          echo "DB_PORT=5432"         >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Generate application key
        run: php artisan key:generate

      # ←── KEY-BASED SSH STARTS HERE ──→

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@162.254.35.72 << 'EOF'
            cd /home/remittease/web/remittease.com/public_html
            git pull origin main

            # rebuild on server
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # build assets on server (optional)
            yarn install --production
            yarn build

            sudo systemctl reload nginx
          EOF

      # ←── KEY-BASED SSH ENDS HERE ──→

